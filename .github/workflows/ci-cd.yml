name: Full CI/CD with Docker Compose (Gradle & Angular)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: testdb
        options: >-
          --health-cmd "pg_isready -U test"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # ---------------- Checkout ----------------
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      # ---------------- Set up JDK 24 ----------------
      - name: Set up JDK 24
        uses: oracle-actions/setup-java@v1.4.0
        with:
          release: '24'

      - name: Wait for Postgres
        run: |
          echo "Waiting for Postgres at localhost:5432..."
          for i in {1..20}; do
            pg_isready -h localhost -p 5432 -U test && break
            echo "Postgres not ready yet..."
            sleep 5
          done

      # ---------------- Backend (Gradle) ----------------
      - name: Build Backend
        working-directory: backend
        run: ./gradlew clean build --no-daemon

      # ---------------- Frontend (Angular) ----------------
      - name: Set up Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install Frontend Dependencies
        working-directory: frontend
        run: npm ci

      - name: Run Frontend Tests
        working-directory: frontend
        run: npm test -- --watch=false --browsers=ChromeHeadless

      - name: Build Angular App
        working-directory: frontend
        run: npm run build -- --prod

      # ---------------- Docker Compose ----------------
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Start Services
        run: |
          docker-compose -f docker-compose.yml build
          docker-compose -f docker-compose.yml up -d

      # ---------------- Optional: Integration Tests ----------------
      - name: Run Integration Tests
        run: |
          echo "Run integration tests here against the running services"

      # ---------------- Tear Down ----------------
      - name: Tear Down Docker Compose
        if: always()
        run: docker-compose down
